site_name: Quarkus LangChain4j Workshop
repo_url: https://github.com/quarkusio/quarkus-langchain4j-workshop
edit_uri: edit/main/docs/
docs_dir: docs

nav:
  - Requirements: 'requirements.md'
  - Section 1 - AI Apps:
    - Step 1 - Introduction to Quarkus LangChain4j: 'section-1/step-01.md'
    - Step 2 - Playing with model parameters: 'section-1/step-02.md'
    - Step 3 - Streaming responses: 'section-1/step-03.md'
    - Step 4 - Using system messages: 'section-1/step-04.md'
    - Step 5 - Introduction to the RAG pattern: 'section-1/step-05.md'
    - Step 6 - Deconstructing the RAG: 'section-1/step-06.md'
    - Step 7 - Function calling and tools: 'section-1/step-07.md'
    - Step 8 - Model Context Protocol: 'section-1/step-08.md'
    - Step 9 - Guardrails: 'section-1/step-09.md'
    - Step 10 - Observability and Fault Tolerance: 'section-1/step-10.md'
    - Step 11 - Serving the model in pure Java with Jlama: 'section-1/step-11.md'
  - Section 2 - Agentic Workflows:
    - Step 1 - Implementing AI Agents: 'section-2/step-01.md'
    - Step 2 - Composing simple agent workflows: 'section-2/step-02.md'
    - Step 3 - Building nested agent workflows: 'section-2/step-03.md'
    - Step 4 - Using remote agents (A2A): 'section-2/step-04.md'
    - Mastering Agentic Systems: 'section-2/conclusion.md'
  - Conclusion: 'conclusion.md'


theme:
  name: material
  custom_dir: mkdocs-customizations/overrides
  palette:
    - media: "(prefers-color-scheme: light)"
      scheme: default
      primary: blue
      accent: amber
      toggle:
        icon: material/lightbulb-night
        name: Switch to dark mode
    - media: "(prefers-color-scheme: dark)"
      scheme: slate
      primary: blue
      accent: orange
      toggle:
        icon: material/lightbulb-on
        name: Switch to light mode
  font:
    text: Roboto
    code: Ubuntu Mono
  icon:
    repo: fontawesome/brands/github
  logo: images/logo.png
  favicon: images/logo.png
  features:
    - navigation.sections
    - content.tabs.link
    - content.code.annotate
    - navigation.instant
    - navigation.indexes
    - navigation.tracking
    - navigation.footer
    - navigation.tabs.sticky
    - content.code.select
    - content.code.copy

extra_css:
  - extra.css

extra_javascript:
  - https://polyfill.io/v3/polyfill.min.js?features=es6
  - https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js

markdown_extensions:
  - toc:
      permalink: ÔÉÅ
  - admonition
  - smarty
  - attr_list
  - md_in_html
  - meta
  - tables
  - pymdownx.highlight:
      anchor_linenums: true
  - pymdownx.superfences:
      custom_fences:
        - name: mermaid
          class: mermaid
          format: !!python/name:pymdownx.superfences.fence_code_format
  - pymdownx.snippets:
      check_paths: true
      base_path: !relative $docs_dir
      restrict_base_path: false
      dedent_subsections: true
  - pymdownx.inlinehilite
  - pymdownx.details
  - pymdownx.smartsymbols
  - pymdownx.betterem
  - pymdownx.superfences
  - pymdownx.mark
  - pymdownx.tabbed:
      alternate_style: true
  - pymdownx.arithmatex:
      generic: true
  - pymdownx.emoji:
      emoji_index: !!python/name:material.extensions.emoji.twemoji
      emoji_generator: !!python/name:material.extensions.emoji.to_svg

plugins:
  - search
  - build_plantuml:
      render: "server"
      server: "https://www.plantuml.com/plantuml"
      output_format: "svg"
      diagram_root: "docs"
      output_folder: "target"
      input_folder: "diagrams"
      input_extensions: "puml"
  - macros:
      verbose: true
      module_name: mkdocs-customizations/macros/docissimo
      include_dir: mkdocs-customizations/macros
  - mkdocs-video:
      is_video: True


extra:
  snippet_dir: ../
  manifest: manifest.webmanifest
  version:
    provider: mike
